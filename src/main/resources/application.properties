
server.port=8080
# LOCAL CONFIGURATION
spring.datasource.driverClassName = com.mysql.jdbc.Driver
# indicamos que la db esta en mysql (puede ser H2, sqlServer, etc)
# jitdb se cambia al nombre de la base de datos que usaremos
spring.datasource.url = jdbc:mysql://localhost:3306/jitdb?serverTimezone=UTC
spring.datasource.username = root
spring.datasource.password = rootroot

# OTHER CONFIGURATIONS
spring.jpa.show-sql = true 
# muestra en consola el codigo sql 
spring.jpa.hibernate.ddl-auto = validate 
# puede ser create (crea la db cuando ejecutamos el project) o update tmb, 
spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# le indica que trabajaremos con mysql
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# lo siguiente no es necesario para proyectos chicos
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# POOL CONNECTION CONFIGURATION
spring.datasource.tomcat.initial-size=15
spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=15
spring.datasource.tomcat.min-idle=8
spring.datasource.tomcat.default-auto-commit=true 

# SIZE IMAGE UPLOAD
spring.servlet.multipart.max-file-size=10000000
spring.servlet.multipart.max-request-size=10000000

